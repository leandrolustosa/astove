@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}
@functions{
    public string GetAntiForgeryToken()
    {
        string cookieToken, formToken;
        AntiForgery.GetTokens(null, out cookieToken, out formToken);
        return cookieToken + ":" + formToken;
    }
}

<div class="middle-box text-center loginscreen animated fadeInDown" ng-app="loginApp" ng-controller="registerCtrl">
    <div>
        <div>

            <h1 class="logo-name">IN+</h1>

        </div>
        <h3>Register to IN+</h3>
        <p>Create account to see it in action.</p>
        <form class="m-t" role="form" name="registerForm" ng-submit="submitForm(registerForm.$valid)" novalidate>
            <input id="antiForgeryToken" data-ng-model="antiForgeryToken" type="hidden" data-ng-init="antiForgeryToken='@GetAntiForgeryToken()'" />
            <div ng-show="showAlert" class="alert alert-dismissible" ng-class="{ 'alert-danger' : hasError, 'alert-success' : success }" role="alert">
                <button type="button" class="close" ng-click="showAlert=false;"><span aria-hidden="true">&times;</span><span class="sr-only">Fechar</span></button>
                <strong>{{messagetype}}!</strong> {{message}}
            </div>
            <div class="form-group" ng-class="{ 'has-error' : registerForm.login.$invalid && !registerForm.login.$pristine }">
                <input name="login" type="email" class="form-control" ng-model="model.Email" required placeholder="E-mail" />
                <p ng-show="registerForm.login.$invalid && !registerForm.login.$pristine" class="help-block">
                    O campo "e-mail" é obrigatório e deve ser um e-mail válido.
                </p>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : registerForm.newpassword.$invalid && !registerForm.newpassword.$pristine }">
                <input name="newpassword" type="password" class="form-control" ng-model="model.Password" required ng-minlength="4" ng-maxlength="12" placeholder="Nova senha" />
                <p ng-show="registerForm.newpassword.$invalid && !registerForm.newpassword.$pristine" class="help-block">
                    O campo senha é obrigatório.
                </p>
                <p ng-show="registerForm.newpassword.$error.minlength" class="help-block">
                    Senha muito pequena.
                </p>
                <p ng-show="registerForm.newpassword.$error.maxlength" class="help-block">
                    Senha muito longa.
                </p>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : registerForm.confirmpassword.$invalid && !registerForm.confirmpassword.$pristine }">
                <input name="confirmpassword" type="password" class="form-control" ng-model="model.ConfirmPassword" required ng-minlength="4" ng-maxlength="12" ng-match="model.Password" placeholder="Confirmação da nova senha" />
                <p ng-show="registerForm.confirmpassword.$invalid && !registerForm.confirmpassword.$pristine" class="help-block">
                    O campo senha é obrigatório.
                </p>
                <p ng-show="registerForm.confirmpassword.$error.minlength" class="help-block">
                    Senha muito pequena.
                </p>
                <p ng-show="registerForm.confirmpassword.$error.maxlength" class="help-block">
                    Senha muito longa.
                </p>
                <p ng-show="registerForm.confirmpassword.$error.match" class="help-block">
                    As senhas informadas precisam ser iguais.
                </p>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : profileForm.email.$invalid && !profileForm.email.$pristine }">
                <input name="email" type="email" class="form-control" ng-model="model.EmailAlternativo" pattern="[a-z0-9._%+-]+&#64;[a-z0-9.-]+\.[a-z]{2,4}$" placeholder="E-mail alternativo" />
                <p ng-show="registerForm.email.$invalid && !registerForm.email.$pristine" class="help-block">
                    Informe um e-mail válido.
                </p>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : registerForm.nome.$invalid && !registerForm.nome.$pristine }">
                <input name="nome" type="text" class="form-control" ng-model="model.FirstName" placeholder="Nome" />
                <p ng-show="registerForm.nome.$invalid && !registerForm.nome.$pristine" class="help-block">
                    Informe um nome válido.
                </p>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : registerForm.sobrenome.$invalid && !registerForm.sobrenome.$pristine }">
                <input name="sobrenome" type="text" class="form-control" ng-model="model.LastName" placeholder="Sobrenome" />
                <p ng-show="registerForm.sobrenome.$invalid && !registerForm.sobrenome.$pristine" class="help-block">
                    Informe um sobrenome válido.
                </p>
            </div>
            <button type="submit" class="btn btn-primary block full-width m-b" ng-disabled="registerForm.$invalid">
                ENVIAR
            </button>

            <p class="text-muted text-center"><small>Already have an account?</small></p>
            <a class="btn btn-sm btn-white btn-block" href="/Account/Login">Login</a>
        </form>
        <p class="m-t"> <small>Inspinia we app framework base on Bootstrap 3 &copy; 2014</small> </p>
    </div>
</div>

@Scripts.Render("~/bundles/jquery-bootstrap")
@Scripts.Render("~/bundles/icheck")
<script>
    $(document).ready(function(){
        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });
    });
</script>